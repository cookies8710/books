/sqrt3 {3 sqrt} def

% draws hexagon with center tx, ty, radius a and generated by p_ft 
% p_ft is expected to draw into the the base equilateral triangle area with side of size a - vertices [0, 0], [0, a], [a*sqrt(3)/2, a/2]
/hexagon 
{ 
	/a exch def
	/p_ft exch def
	/t exch def

	/tx {t 0 get} def
	/ty {t 1 get} def

	tx ty translate

	0 1 5 {
		p_ft
		60 rotate
	} for

	tx neg ty neg translate
} def


% todo nx, ny: 700, 600 should be taken from page size
%
% hexagon's circle radius
/a 50 def 
/nx {700 a 2 mul div} def
/ny {1200 a 2 mul div} def

% u -> 0 deg vector
/u {
	/pa exch def
	/x {pa sqrt3 mul} def
	[x 0]
} def

% v -> 60 deg vector
/v {
	/pa exch def
	/x {pa sqrt3 2 div mul} def
	/y {3 pa 2 div mul} def
	[x y]
} def

% vec1 vec2 -> vec1 + vec2
/add_vec { 
	/b exch def
	/aaa exch def
	/xs {aaa 0 get b 0 get add} def
	/ys {aaa 1 get b 1 get add} def
	[xs ys]
} def

% vec k -> k * vec
/mul_vec { 
	/k exch def
	/vec exch def
	/xs {k vec 0 get mul} def
	/ys {k vec 1 get mul} def
	[xs ys]
} def

% hexagon outline - just the outer line
/outline {
	/side exch def
	newpath
	0 side moveto 
	side sqrt3 2 div mul side 2 div lineto
	stroke
} def

% fundamental tile for star pattern
/star {
	/side exch def
	/b {0.8 side mul} def
	/w {0.1 side mul} def
	/ex {b sqrt3 2 div mul} def
	/ey {b 2 div} def


	newpath
	0 b moveto % A = [0, b]
	w w sqrt3 mul lineto % C = [w, w/ tg 30]
	ex ey  lineto % E = [b * sqrt(3) / 2,b * sin 30]
	stroke
} def
%
% fundamental tile for "asterisk" star
/asterisk {
	/side exch def
	/b {0.8 side mul} def
	/w {0.1 side mul} def
	/ex {b sqrt3 2 div mul} def
	/ey {b 2 div} def
	/dxx {ex w 0.5 mul sub} def
	/dyy {ey w sqrt3 2 div mul add} def

	newpath
	0 0 moveto
	0 b lineto % A = [0, b]
	w b lineto % B = [w, b]
	w w sqrt3 mul lineto % C = [w, w/ tg 30]
	dxx dyy lineto % D = 
	ex ey lineto % E = [b * sqrt(3) / 2,b * sin 30]
	0 0 lineto
	fill
	stroke
} def

% fundamental tile for dodecagon
/dodecagon {
	/side exch def

	/l_d {0.3 side mul} def
	/l_b {l_d 1 sqrt3 2 div add mul} def
	/l_w {0.1 side mul} def

	/l_ex {l_b sqrt3 2 div mul} def
	/l_ey {l_b 2 div} def
	/l_dx {l_ex l_d 0.25 mul sub} def
	/l_dy {l_ey l_d sqrt3 4 div mul add} def

	% underlying green

        % red dodecagon
	newpath
	0 0 moveto % A
	0 l_b lineto  % B
	l_d 2 div l_b lineto % C
	l_dx l_dy lineto  % D
	l_ex l_ey lineto % E
	0 0 lineto % A
	closepath
	gsave
	1 0 0 setrgbcolor
	fill
	stroke
	grestore

	% blue spikes
	newpath
	0 l_b moveto
	0 side lineto
	l_w a 0.5 l_w mul sub lineto
        l_w l_b lineto
	closepath
	gsave
	0 0 1 setrgbcolor
        fill
	grestore

	/l_gx {side sqrt3 0.5 mul mul} def
	/l_gy {side 0.5 mul} def
	/l_hx {l_b sqrt3 0.5 mul mul} def
	/l_hy {l_b 0.5 mul} def
	/l_ex {l_hx l_w 0.5 mul sub} def
	/l_ey {l_hy sqrt3 l_w 0.5 mul mul add} def
	/l_fx {l_gx l_w -0.5 mul add} def
	/l_fy {l_gy l_w sqrt3 0.5 mul mul add} def
	newpath
	l_ex l_ey moveto
	l_fx l_fy lineto
	l_gx l_gy lineto
	l_hx l_hy lineto
	closepath
	gsave
	0 0 1 setrgbcolor
        fill
	grestore
        
} def

% fundamental tile for project 1.6
/dodecagon2 {
	/side exch def

	/l_d {0.2 side mul} def
	/l_b {l_d 1 sqrt3 2 div add mul} def
	/l_w {0.10 side mul} def

	/l_ex {l_b sqrt3 2 div mul} def
	/l_ey {l_b 2 div} def
	/l_dx {l_ex l_d 0.25 mul sub} def
	/l_dy {l_ey l_d sqrt3 4 div mul add} def

	/l_3 {sqrt3 2 div} def

	/l_red {0.8 0 0} def
	/l_green {0.0 0.4 0} def
	/l_blue {0.0 0 0.8} def

	% green background
	newpath
	0 0 moveto
	0 side lineto
	l_3 side mul side 0.5 mul lineto
	closepath
	gsave
	l_green setrgbcolor
	fill
	grestore

        % red dodecagon
	/l_s2y {side 2 div} def
	/l_s2x {side sqrt3 mul 6 div} def
	0 1 2 { 
		newpath
		0 0 moveto % A
		0 l_b lineto  % B
		l_d 2 div l_b lineto % C
		l_dx l_dy lineto  % D
		l_ex l_ey lineto % E
		0 0 lineto % A
		closepath
		gsave
		l_red setrgbcolor
		fill
		stroke
		grestore
	
		% blue spikes
		newpath
		0 l_b moveto

		0 side l_b sub lineto
		l_w side l_b sub  lineto
		
		l_w l_b lineto
		closepath
		gsave
		l_blue setrgbcolor
		fill
		grestore

		% rotate around the center of the fundamental tile
		l_s2x l_s2y translate
		-120 rotate
		l_s2x neg l_s2y neg translate
	} for
} def


/fundamental {dodecagon2} def
/nothing {/side exch def} def

/debug {false} def
debug {
300 300 translate
100 fundamental
/fundamental {nothing} def
} if

0 1 ny {
	/dy exch def
	0 1 nx {
		/dx exch def
		/dx2 {dx dy 2 div floor sub} def % need to account for v's shift to right
		a u dx2 mul_vec a v dy mul_vec add_vec {a fundamental} a hexagon
	} for
} for

showpage
